/**
 * Nozomi API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import CreateRequestPropertyInputModel from '../model/CreateRequestPropertyInputModel';
import RequestPropertyViewModelIEnumerablePaginatedViewModel from '../model/RequestPropertyViewModelIEnumerablePaginatedViewModel';
import UpdateRequestPropertyInputModel from '../model/UpdateRequestPropertyInputModel';

/**
* RequestProperty service.
* @module api/RequestPropertyApi
* @version 5
*/
export default class RequestPropertyApi {

    /**
    * Constructs a new RequestPropertyApi. 
    * @alias module:api/RequestPropertyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the requestPropertyAllByRequestGet operation.
     * @callback module:api/RequestPropertyApi~requestPropertyAllByRequestGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RequestPropertyViewModelIEnumerablePaginatedViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtain all analysed components you have created, relative to that specific request.
     * @param {Object} opts Optional parameters
     * @param {module:api/RequestPropertyApi~requestPropertyAllByRequestGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RequestPropertyViewModelIEnumerablePaginatedViewModel}
     */
    requestPropertyAllByRequestGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'requestGuid': opts['requestGuid'],
        'index': opts['index']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = RequestPropertyViewModelIEnumerablePaginatedViewModel;

      return this.apiClient.callApi(
        '/RequestProperty/AllByRequest', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the requestPropertyAllGet operation.
     * @callback module:api/RequestPropertyApi~requestPropertyAllGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RequestPropertyViewModelIEnumerablePaginatedViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtain all request properties you have created/own.
     * @param {Object} opts Optional parameters
     * @param {module:api/RequestPropertyApi~requestPropertyAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RequestPropertyViewModelIEnumerablePaginatedViewModel}
     */
    requestPropertyAllGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'index': opts['index']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = RequestPropertyViewModelIEnumerablePaginatedViewModel;

      return this.apiClient.callApi(
        '/RequestProperty/All', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the requestPropertyCreatePost operation.
     * @callback module:api/RequestPropertyApi~requestPropertyCreatePostCallback
     * @param {String} error Error message, if any.
     * @param {'String'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a request property.
     * @param {Object} opts Optional parameters
     * @param {module:api/RequestPropertyApi~requestPropertyCreatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'String'}
     */
    requestPropertyCreatePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/RequestProperty/Create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the requestPropertyDeleteGuidDelete operation.
     * @callback module:api/RequestPropertyApi~requestPropertyDeleteGuidDeleteCallback
     * @param {String} error Error message, if any.
     * @param {'String'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a request property
     * @param {module:api/RequestPropertyApi~requestPropertyDeleteGuidDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'String'}
     */
    requestPropertyDeleteGuidDelete(guid, callback) {
      let postBody = null;

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/RequestProperty/Delete/{guid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the requestPropertyUpdatePut operation.
     * @callback module:api/RequestPropertyApi~requestPropertyUpdatePutCallback
     * @param {String} error Error message, if any.
     * @param {'String'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a request property.
     * @param {Object} opts Optional parameters
     * @param {module:api/RequestPropertyApi~requestPropertyUpdatePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'String'}
     */
    requestPropertyUpdatePut(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/RequestProperty/Update', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
