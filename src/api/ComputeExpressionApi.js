/**
 * Nozomi API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import ComputeExpressionViewModel from '../model/ComputeExpressionViewModel';
import ComputeExpressionViewModelIEnumerablePaginatedViewModel from '../model/ComputeExpressionViewModelIEnumerablePaginatedViewModel';

/**
* ComputeExpression service.
* @module api/ComputeExpressionApi
* @version 5
*/
export default class ComputeExpressionApi {

    /**
    * Constructs a new ComputeExpressionApi. 
    * @alias module:api/ComputeExpressionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the computeExpressionAllIndexGet operation.
     * @callback module:api/ComputeExpressionApi~computeExpressionAllIndexGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComputeExpressionViewModelIEnumerablePaginatedViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains all of the relevant compute expressions you own.
     * @param {Object} opts Optional parameters
     * @param {module:api/ComputeExpressionApi~computeExpressionAllIndexGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComputeExpressionViewModelIEnumerablePaginatedViewModel}
     */
    computeExpressionAllIndexGet(index, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'index': index
      };
      let queryParams = {
        'computeGuid': opts['computeGuid']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ComputeExpressionViewModelIEnumerablePaginatedViewModel;

      return this.apiClient.callApi(
        '/ComputeExpression/All/{index}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the computeExpressionGetGuidGet operation.
     * @callback module:api/ComputeExpressionApi~computeExpressionGetGuidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComputeExpressionViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains the specific compute expression.
     * @param {module:api/ComputeExpressionApi~computeExpressionGetGuidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComputeExpressionViewModel}
     */
    computeExpressionGetGuidGet(guid, callback) {
      let postBody = null;

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ComputeExpressionViewModel;

      return this.apiClient.callApi(
        '/ComputeExpression/Get/{guid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
