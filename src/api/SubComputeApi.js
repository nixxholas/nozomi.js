/**
 * Nozomi API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import ComputeViewModelIEnumerablePaginatedViewModel from '../model/ComputeViewModelIEnumerablePaginatedViewModel';
import SubComputeViewModel from '../model/SubComputeViewModel';
import SubComputeViewModelIEnumerablePaginatedViewModel from '../model/SubComputeViewModelIEnumerablePaginatedViewModel';

/**
* SubCompute service.
* @module api/SubComputeApi
* @version 5
*/
export default class SubComputeApi {

    /**
    * Constructs a new SubComputeApi. 
    * @alias module:api/SubComputeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the subComputeAllByChildChildComputeGuidGet operation.
     * @callback module:api/SubComputeApi~subComputeAllByChildChildComputeGuidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComputeViewModelIEnumerablePaginatedViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains all of the relevant parent computes the child compute has.
     * @param {Object} opts Optional parameters
     * @param {module:api/SubComputeApi~subComputeAllByChildChildComputeGuidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComputeViewModelIEnumerablePaginatedViewModel}
     */
    subComputeAllByChildChildComputeGuidGet(childComputeGuid, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'childComputeGuid': childComputeGuid
      };
      let queryParams = {
        'index': opts['index']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ComputeViewModelIEnumerablePaginatedViewModel;

      return this.apiClient.callApi(
        '/SubCompute/AllByChild/{childComputeGuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the subComputeAllByParentParentComputeGuidGet operation.
     * @callback module:api/SubComputeApi~subComputeAllByParentParentComputeGuidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComputeViewModelIEnumerablePaginatedViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains all of the relevant child computes the parent compute has.
     * @param {Object} opts Optional parameters
     * @param {module:api/SubComputeApi~subComputeAllByParentParentComputeGuidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComputeViewModelIEnumerablePaginatedViewModel}
     */
    subComputeAllByParentParentComputeGuidGet(parentComputeGuid, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'parentComputeGuid': parentComputeGuid
      };
      let queryParams = {
        'index': opts['index']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = ComputeViewModelIEnumerablePaginatedViewModel;

      return this.apiClient.callApi(
        '/SubCompute/AllByParent/{parentComputeGuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the subComputeAllIndexGet operation.
     * @callback module:api/SubComputeApi~subComputeAllIndexGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubComputeViewModelIEnumerablePaginatedViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains all of the relevant Sub Computes you own.
     * @param {module:api/SubComputeApi~subComputeAllIndexGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubComputeViewModelIEnumerablePaginatedViewModel}
     */
    subComputeAllIndexGet(index, callback) {
      let postBody = null;

      let pathParams = {
        'index': index
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = SubComputeViewModelIEnumerablePaginatedViewModel;

      return this.apiClient.callApi(
        '/SubCompute/All/{index}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the subComputeGetGet operation.
     * @callback module:api/SubComputeApi~subComputeGetGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SubComputeViewModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains the specific sub compute.
     * @param {Object} opts Optional parameters
     * @param {module:api/SubComputeApi~subComputeGetGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SubComputeViewModel}
     */
    subComputeGetGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'parentComputeGuid': opts['parentComputeGuid'],
        'childComputeGuid': opts['childComputeGuid']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API Key'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = SubComputeViewModel;

      return this.apiClient.callApi(
        '/SubCompute/Get', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
