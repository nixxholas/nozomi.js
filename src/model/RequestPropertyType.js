/**
 * Nozomi API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class RequestPropertyType.
* @enum {}
* @readonly
*/
export default class RequestPropertyType {
        /**
         * value: "HttpHeader"
         * @const
         */
        HttpHeader = "HttpHeader";

        /**
         * value: "HttpHeader_Accept"
         * @const
         */
        HttpHeader_Accept = "HttpHeader_Accept";

        /**
         * value: "HttpHeader_AcceptCharset"
         * @const
         */
        HttpHeader_AcceptCharset = "HttpHeader_AcceptCharset";

        /**
         * value: "HttpHeader_AcceptEncoding"
         * @const
         */
        HttpHeader_AcceptEncoding = "HttpHeader_AcceptEncoding";

        /**
         * value: "HttpHeader_AcceptLanguage"
         * @const
         */
        HttpHeader_AcceptLanguage = "HttpHeader_AcceptLanguage";

        /**
         * value: "HttpHeader_Authorization"
         * @const
         */
        HttpHeader_Authorization = "HttpHeader_Authorization";

        /**
         * value: "HttpHeader_CacheControl"
         * @const
         */
        HttpHeader_CacheControl = "HttpHeader_CacheControl";

        /**
         * value: "HttpHeader_Connection"
         * @const
         */
        HttpHeader_Connection = "HttpHeader_Connection";

        /**
         * value: "HttpHeader_ConnectionClose"
         * @const
         */
        HttpHeader_ConnectionClose = "HttpHeader_ConnectionClose";

        /**
         * value: "HttpHeader_Date"
         * @const
         */
        HttpHeader_Date = "HttpHeader_Date";

        /**
         * value: "HttpHeader_Expect"
         * @const
         */
        HttpHeader_Expect = "HttpHeader_Expect";

        /**
         * value: "HttpHeader_ExpectContinue"
         * @const
         */
        HttpHeader_ExpectContinue = "HttpHeader_ExpectContinue";

        /**
         * value: "HttpHeader_From"
         * @const
         */
        HttpHeader_From = "HttpHeader_From";

        /**
         * value: "HttpHeader_Host"
         * @const
         */
        HttpHeader_Host = "HttpHeader_Host";

        /**
         * value: "HttpHeader_IfMatch"
         * @const
         */
        HttpHeader_IfMatch = "HttpHeader_IfMatch";

        /**
         * value: "HttpHeader_IfModifiedSince"
         * @const
         */
        HttpHeader_IfModifiedSince = "HttpHeader_IfModifiedSince";

        /**
         * value: "HttpHeader_IfNoneMatch"
         * @const
         */
        HttpHeader_IfNoneMatch = "HttpHeader_IfNoneMatch";

        /**
         * value: "HttpHeader_IfRange"
         * @const
         */
        HttpHeader_IfRange = "HttpHeader_IfRange";

        /**
         * value: "HttpHeader_IfUnmodifiedSince"
         * @const
         */
        HttpHeader_IfUnmodifiedSince = "HttpHeader_IfUnmodifiedSince";

        /**
         * value: "HttpHeader_MaxForwards"
         * @const
         */
        HttpHeader_MaxForwards = "HttpHeader_MaxForwards";

        /**
         * value: "HttpHeader_Pragma"
         * @const
         */
        HttpHeader_Pragma = "HttpHeader_Pragma";

        /**
         * value: "HttpHeader_ProxyAuthorization"
         * @const
         */
        HttpHeader_ProxyAuthorization = "HttpHeader_ProxyAuthorization";

        /**
         * value: "HttpHeader_Range"
         * @const
         */
        HttpHeader_Range = "HttpHeader_Range";

        /**
         * value: "HttpHeader_Referrer"
         * @const
         */
        HttpHeader_Referrer = "HttpHeader_Referrer";

        /**
         * value: "HttpHeader_TE"
         * @const
         */
        HttpHeader_TE = "HttpHeader_TE";

        /**
         * value: "HttpHeader_Trailer"
         * @const
         */
        HttpHeader_Trailer = "HttpHeader_Trailer";

        /**
         * value: "HttpHeader_TransferEncoding"
         * @const
         */
        HttpHeader_TransferEncoding = "HttpHeader_TransferEncoding";

        /**
         * value: "HttpHeader_TransferEncodingChunked"
         * @const
         */
        HttpHeader_TransferEncodingChunked = "HttpHeader_TransferEncodingChunked";

        /**
         * value: "HttpHeader_Upgrade"
         * @const
         */
        HttpHeader_Upgrade = "HttpHeader_Upgrade";

        /**
         * value: "HttpHeader_UserAgent"
         * @const
         */
        HttpHeader_UserAgent = "HttpHeader_UserAgent";

        /**
         * value: "HttpHeader_Via"
         * @const
         */
        HttpHeader_Via = "HttpHeader_Via";

        /**
         * value: "HttpHeader_Warning"
         * @const
         */
        HttpHeader_Warning = "HttpHeader_Warning";

        /**
         * value: "HttpHeader_Custom"
         * @const
         */
        HttpHeader_Custom = "HttpHeader_Custom";

        /**
         * value: "HttpHeader_MediaType"
         * @const
         */
        HttpHeader_MediaType = "HttpHeader_MediaType";

        /**
         * value: "HttpBody"
         * @const
         */
        HttpBody = "HttpBody";

        /**
         * value: "HttpQuery"
         * @const
         */
        HttpQuery = "HttpQuery";

        /**
         * value: "HttpHeader_BasicAuthUser"
         * @const
         */
        HttpHeader_BasicAuthUser = "HttpHeader_BasicAuthUser";

        /**
         * value: "HttpHeader_BasicAuthPassword"
         * @const
         */
        HttpHeader_BasicAuthPassword = "HttpHeader_BasicAuthPassword";

        /**
         * value: "SocketSubscription"
         * @const
         */
        SocketSubscription = "SocketSubscription";

        /**
         * value: "SocketBody"
         * @const
         */
        SocketBody = "SocketBody";

        /**
         * value: "Invalid"
         * @const
         */
        Invalid = "Invalid";


    /**
    * Returns a <code>RequestPropertyType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/RequestPropertyType} The enum <code>RequestPropertyType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}
